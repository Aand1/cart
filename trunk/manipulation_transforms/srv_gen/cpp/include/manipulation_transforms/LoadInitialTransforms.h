/* Auto-generated by genmsg_cpp for file /home/diro/ros_workspace/final_project/trunk/manipulation_transforms/srv/LoadInitialTransforms.srv */
#ifndef MANIPULATION_TRANSFORMS_SERVICE_LOADINITIALTRANSFORMS_H
#define MANIPULATION_TRANSFORMS_SERVICE_LOADINITIALTRANSFORMS_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace manipulation_transforms
{
template <class ContainerAllocator>
struct LoadInitialTransformsRequest_ {
  typedef LoadInitialTransformsRequest_<ContainerAllocator> Type;

  LoadInitialTransformsRequest_()
  : name()
  {
  }

  LoadInitialTransformsRequest_(const ContainerAllocator& _alloc)
  : name(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _name_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  name;


  typedef boost::shared_ptr< ::manipulation_transforms::LoadInitialTransformsRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::manipulation_transforms::LoadInitialTransformsRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct LoadInitialTransformsRequest
typedef  ::manipulation_transforms::LoadInitialTransformsRequest_<std::allocator<void> > LoadInitialTransformsRequest;

typedef boost::shared_ptr< ::manipulation_transforms::LoadInitialTransformsRequest> LoadInitialTransformsRequestPtr;
typedef boost::shared_ptr< ::manipulation_transforms::LoadInitialTransformsRequest const> LoadInitialTransformsRequestConstPtr;


template <class ContainerAllocator>
struct LoadInitialTransformsResponse_ {
  typedef LoadInitialTransformsResponse_<ContainerAllocator> Type;

  LoadInitialTransformsResponse_()
  : success(false)
  {
  }

  LoadInitialTransformsResponse_(const ContainerAllocator& _alloc)
  : success(false)
  {
  }

  typedef uint8_t _success_type;
  uint8_t success;


  typedef boost::shared_ptr< ::manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct LoadInitialTransformsResponse
typedef  ::manipulation_transforms::LoadInitialTransformsResponse_<std::allocator<void> > LoadInitialTransformsResponse;

typedef boost::shared_ptr< ::manipulation_transforms::LoadInitialTransformsResponse> LoadInitialTransformsResponsePtr;
typedef boost::shared_ptr< ::manipulation_transforms::LoadInitialTransformsResponse const> LoadInitialTransformsResponseConstPtr;

struct LoadInitialTransforms
{

typedef LoadInitialTransformsRequest Request;
typedef LoadInitialTransformsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct LoadInitialTransforms
} // namespace manipulation_transforms

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::manipulation_transforms::LoadInitialTransformsRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::manipulation_transforms::LoadInitialTransformsRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::manipulation_transforms::LoadInitialTransformsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c1f3d28f1b044c871e6eff2e9fc3c667";
  }

  static const char* value(const  ::manipulation_transforms::LoadInitialTransformsRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xc1f3d28f1b044c87ULL;
  static const uint64_t static_value2 = 0x1e6eff2e9fc3c667ULL;
};

template<class ContainerAllocator>
struct DataType< ::manipulation_transforms::LoadInitialTransformsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "manipulation_transforms/LoadInitialTransformsRequest";
  }

  static const char* value(const  ::manipulation_transforms::LoadInitialTransformsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::manipulation_transforms::LoadInitialTransformsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
string name\n\
\n\
";
  }

  static const char* value(const  ::manipulation_transforms::LoadInitialTransformsRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "358e233cde0c8a8bcfea4ce193f8fc15";
  }

  static const char* value(const  ::manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x358e233cde0c8a8bULL;
  static const uint64_t static_value2 = 0xcfea4ce193f8fc15ULL;
};

template<class ContainerAllocator>
struct DataType< ::manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "manipulation_transforms/LoadInitialTransformsResponse";
  }

  static const char* value(const  ::manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
bool success\n\
\n\
\n\
";
  }

  static const char* value(const  ::manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::manipulation_transforms::LoadInitialTransformsRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.name);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct LoadInitialTransformsRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.success);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct LoadInitialTransformsResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<manipulation_transforms::LoadInitialTransforms> {
  static const char* value() 
  {
    return "d08a3b641c2f8680fbdfb1ea2e17a3e1";
  }

  static const char* value(const manipulation_transforms::LoadInitialTransforms&) { return value(); } 
};

template<>
struct DataType<manipulation_transforms::LoadInitialTransforms> {
  static const char* value() 
  {
    return "manipulation_transforms/LoadInitialTransforms";
  }

  static const char* value(const manipulation_transforms::LoadInitialTransforms&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<manipulation_transforms::LoadInitialTransformsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d08a3b641c2f8680fbdfb1ea2e17a3e1";
  }

  static const char* value(const manipulation_transforms::LoadInitialTransformsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<manipulation_transforms::LoadInitialTransformsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "manipulation_transforms/LoadInitialTransforms";
  }

  static const char* value(const manipulation_transforms::LoadInitialTransformsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d08a3b641c2f8680fbdfb1ea2e17a3e1";
  }

  static const char* value(const manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "manipulation_transforms/LoadInitialTransforms";
  }

  static const char* value(const manipulation_transforms::LoadInitialTransformsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // MANIPULATION_TRANSFORMS_SERVICE_LOADINITIALTRANSFORMS_H

